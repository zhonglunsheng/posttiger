{"scriptManage":{"list":[{"basicForm":{"closeMain":false,"executePath":"D:/tmp","codeType":"javascript","name":"保存本地配置","desc":"1","cronTask":"30 * * * * *","relationForm":"simpleForm","hotKeyWindow":true,"apiWindow":true,"debugWindow":true,"preScriptWindow":true},"features":{"code":"test1","explain":"test1","cmds":["test1"]},"code":"let content = getConfigDataJson()\r\nfs.writeFileSync('D:/code/gitee/web/vite-project/config.data', JSON.stringify(content), err => {\r\n  console.log(err);\r\n})\r\n\r\n","preScriptContent":"let a = {\r\n  \"name\": {\r\n    'ui:widget': 'SelectWidget',\r\n    'ui:enumOptions': [{ value: '1', label: '加载中...' }],\r\n  }\r\n}\r\na"},{"basicForm":{"closeMain":false,"executePath":"D:/tmp","codeType":"javascript","name":"test","desc":"1","hotKeyWindow":true,"debugWindow":true,"apiWindow":true,"relationForm":"simpleForm"},"features":{"code":"preview","explain":"使用内置编辑器预览文本内容","cmds":["preview"]},"code":"let a = {\r\n    \"name\": 123\r\n}\r\n\r\na\r\n\r\n//utools.show(JSON.stringify(a))"},{"basicForm":{"closeMain":false,"executePath":"D:/tmp","codeType":"javascript","name":"文本预览","desc":"1","hotKeyWindow":true,"debugWindow":true,"apiWindow":true,"relationForm":"editorLayout"},"features":{"code":"show","explain":"使用内置编辑器预览文本内容","cmds":[{"type":"over","label":"vscode预览"},{"type":"files","label":"vscode预览","fileType":"file"}]},"code":"ENTER"},{"basicForm":{"closeMain":false,"executePath":"D:/tmp","codeType":"python","name":"py1","desc":"1","hotKeyWindow":false,"debugWindow":true,"apiWindow":true,"relationForm":"editorLayout"},"features":"","code":"#!/usr/bin/python3\r\n# -*- coding: utf-8 -*-\r\n# @Time    : 2023/11/19 18:11\r\n# @Author  : zhonglunsheng\r\nimport json\r\nwith open('D:/tmp/result.txt') as f:\r\n    b = f.readline()\r\n\r\nprint(json.loads(b))"},{"basicForm":{"closeMain":false,"executePath":"D:/tmp","codeType":"javascript","name":"t2","desc":"1","hotKeyWindow":true,"debugWindow":true,"apiWindow":true,"relationForm":"simpleForm"},"features":{"code":"t2","explain":"使用内置编辑器预览文本内容","cmds":["t2"]},"code":"utools.ubrowser.goto('https://cn.bing.com')\r\n  .value('#sb_form_q', 'uTools')\r\n  .click('#sb_form_go')\r\n  .run({ width: 1000, height: 600 })"},{"basicForm":{"closeMain":false,"executePath":"D:/tmp","codeType":"python","name":"dev","desc":"1","hotKeyWindow":true,"debugWindow":true,"apiWindow":true,"relationForm":"simpleForm"},"features":{"code":"dev","explain":"使用内置编辑器预览文本内容","cmds":["dev"]},"code":"import shutil\r\nimport os\r\n\r\ndef copy_and_remove(src_folder, dest_folder):\r\n    # 移除目标文件夹内的所有内容\r\n    if os.path.exists(dest_folder):\r\n        shutil.rmtree(dest_folder)\r\n\r\n    # 复制源文件夹的内容到目标文件夹\r\n    shutil.copytree(src_folder, dest_folder)\r\n\r\nif __name__ == \"__main__\":\r\n    # 指定源文件夹和目标文件夹的路径\r\n    source_folder = \"D:/code/gitee/web/vite-project/dist\"\r\n    destination_folder = \"D:/code/gitee/web/vite-project/plugins/idea-x/dist\"\r\n\r\n    # 调用函数进行复制和移除操作\r\n    copy_and_remove(source_folder, destination_folder)\r\n"}]},"scriptForm":{"formProps":{"layoutColumn":1,"labelWidth":"200px","labelSuffix":"："},"basicSchema":{"type":"object","required":["name","codeType"],"properties":{"name":{"type":"string","title":"名称"},"codeType":{"type":"string","title":"脚本类型","ui:widget":"SelectWidget","enum":["javascript","python","other"],"enumNames":["javascript","python","other"]},"desc":{"type":"string","title":"描述"},"cronTask":{"type":"string","title":"定时任务"},"debugWindow":{"type":"boolean","title":"开启调试窗口"},"apiWindow":{"type":"boolean","title":"开启文档窗口"},"hotKeyWindow":{"type":"boolean","title":"开启热键窗口"},"preScriptWindow":{"type":"boolean","title":"开启前置脚本窗口"},"closeMain":{"type":"boolean","title":"执行完后关闭窗口","default":true},"executePath":{"type":"string","title":"脚本执行工作目录","default":"D:/tmp"},"projectName":{"type":"string","title":"项目名称"},"relationForm":{"type":"string","title":"关联表单","ui:widget":"SelectWidget","enum":["simpleForm","editorLayout"],"enumNames":["simpleForm","editorLayout"]}}}},"functionManage":{"t2":"","test":"var test = function test () {\r\n    utools.showNotification('hello')\r\n};\r\ntest","aW":"var aW = function() {\r\n  utools.showNotification('Custom function executed');\r\n}; aW","t1":"    var moment =  require('D:\\\\codeService\\\\npm\\\\global\\\\global\\\\5\\\\.pnpm\\\\moment@2.29.4\\\\node_modules\\\\moment\\\\moment.js')\r\nvar t1 = function t1 () {\r\n\r\n    return moment().format(); \r\n};\r\nt1"},"paramsFormConfig":{"simpleForm":{"schema":{"type":"object","required":[],"properties":{"string_1700877875245x0":{"title":"输入框","type":"string","ui:options":{"placeholder":"请输入"}},"name":{"title":"选择你是谁","type":"string"}}},"uiSchema":{},"formFooter":{"show":false},"formProps":{"labelWidth":"100px","labelSuffix":"："}}},"test":{"hello":"name11"},"codeBlock":[{"key":"vue","content":"<template>\r\n  <el-card style=\"margin: 5px\">\r\n    <el-autocomplete\r\n      v-model=\"configKey\"\r\n      :fetch-suggestions=\"querySearch\"\r\n      clearable\r\n      placeholder=\"Please Input\"\r\n      style=\"width: 80vh\"\r\n      @select=\"handleSelect\"\r\n    />\r\n\r\n    <el-button type=\"primary\" @click=\"handlerLoading\" style=\"margin-left: 5px\">\r\n      加载\r\n    </el-button>\r\n    <el-button type=\"primary\" @click=\"handlerSubmit\">保存</el-button>\r\n\r\n    <div style=\"height: 80vh; margin-top: 10px; margin-bottom: 5px\">\r\n      <Editor\r\n        @changeData=\"\r\n          (value) => {\r\n            content = value\r\n          }\r\n        \"\r\n        :language=\"language\"\r\n        :code=\"content\"\r\n        v-if=\"editorStatus\"\r\n      ></Editor>\r\n    </div>\r\n  </el-card>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, ref, reactive, watchEffect, nextTick } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport Editor from '@/components/Editor.vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { getConfigDataJson, setConfigDataJson } from '@/utils/db'\r\nimport { getNestedValue, setValue } from '@/utils/obj'\r\n\r\n// 输入框\r\n\r\nconst configKey = ref('test')\r\nconst content = ref('')\r\nconst language = ref('json')\r\nconst editorStatus = ref(true)\r\nlet options = []\r\n\r\nconst getKeys = () => {\r\n  if (configKey.value) {\r\n    let keys = getNestedValue(getConfigDataJson(), configKey.value)\r\n    console.log(configKey.value, keys)\r\n    if (keys) {\r\n      return Object.keys(keys).map((key) => {\r\n        return {\r\n          value: configKey.value + '.' + key,\r\n          label: configKey.value + '.' + key,\r\n        }\r\n      })\r\n    } else {\r\n      return options\r\n    }\r\n  } else {\r\n    return Object.keys(getConfigDataJson()).map((key) => {\r\n      return {\r\n        value: key,\r\n        label: key,\r\n      }\r\n    })\r\n  }\r\n}\r\noptions = getKeys()\r\n\r\nconst querySearch = (queryString, cb) => {\r\n  options = getKeys()\r\n  console.log(options)\r\n  const results = queryString\r\n    ? options.filter((item) => {\r\n        return item.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0\r\n      })\r\n    : options\r\n  // call callback function to return suggestions\r\n  cb(results)\r\n}\r\n\r\nconst handleSelect = () => {\r\n  options = getKeys()\r\n}\r\n\r\nconst handlerSubmit = () => {\r\n  try {\r\n    if (configKey.value) {\r\n      let configData = getConfigDataJson()\r\n      if (language.value === 'json') {\r\n        setValue(configData, configKey.value, JSON.parse(content.value))\r\n      } else {\r\n        setValue(configData, configKey.value, content.value)\r\n      }\r\n\r\n      setConfigDataJson(configData)\r\n    }\r\n    ElMessage.success('保存成功')\r\n  } catch (e) {\r\n    ElMessage.error('保存失败，不满足json格式' + e.message)\r\n  }\r\n}\r\n\r\nconst handlerLoading = () => {\r\n  if (configKey.value) {\r\n    let configData = getConfigDataJson()\r\n    let value = getNestedValue(configData, configKey.value)\r\n    if (typeof value === 'object') {\r\n      content.value = JSON.stringify(value)\r\n    } else {\r\n      content.value = value\r\n      language.value = 'text'\r\n    }\r\n    console.log(content.value)\r\n    editorRefresh()\r\n  }\r\n}\r\n\r\nconst editorRefresh = () => {\r\n  editorStatus.value = false\r\n  setTimeout(() => {\r\n    editorStatus.value = true\r\n  }, 100)\r\n}\r\n</script>\r\n"},{"key":".gitignore","content":"/node_modules/*\r\n/dist/*\r\n/html/*\r\n/public/*"}],"codeApi":"// 热key配置\r\n[\r\n    \"test\",\r\n    {\r\n      \"code\": \"qrcode\",\r\n      \"explain\": \"生成二维码图片、识别图片中二维码\",\r\n      \"cmds\": [\r\n        \"QRCode\",\r\n        \"二维码\",\r\n        \"扫码\",\r\n        \"截图识别二维码\",\r\n        {\r\n          \"type\": \"regex\",\r\n          \"match\": \"/^https?:\\\\/\\\\/(?:(?:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3})|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\\\\.?)(?::\\\\d{2,5})?(?:[/?#][^\\\\s\\\"]*)?$/i\",\r\n          \"label\": \"生成二维码\"\r\n        },\r\n        {\r\n          \"type\": \"img\",\r\n          \"label\": \"识别图片中二维码\"\r\n        },\r\n        {\r\n          \"type\": \"window\",\r\n          \"platform\": [\"win32\", \"darwin\"],\r\n          \"match\": {\r\n            \"app\": [\"chrome.exe\", \"firefox.exe\", \"MicrosoftEdge.exe\", \"iexplore.exe\", \"opera.exe\", \"brave.exe\", \"msedge.exe\", \"Google Chrome.app\", \"Safari.app\", \"Opera.app\", \"Vivaldi.app\", \"Brave Browser.app\", \"Microsoft Edge.app\"]\r\n          },\r\n          \"label\": \"当前网页地址二维码\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n\r\n\r\n// 文本\r\n{\r\n                    \"type\": \"files\",\r\n                    \"label\": \"文件匹配\",\r\n                    \"fileType\": \"file\",\r\n                    \"match\": \"/xxx/\",\r\n                    \"minLength\": 1,\r\n                    \"maxLength\": 1\r\n                },\r\n\r\n// 获取执行结果\r\ngetExecuteResult()\r\n\r\n\r\n// python获取表单内容\r\nimport json\r\nwith open('D:/tmp/result.txt') as f:\r\n    b = f.readline()\r\n\r\nprint(json.loads(b))\r\n\r\n\r\n// 前置脚本处理\r\nlet a = {\r\n  \"name\": {\r\n    'ui:widget': 'SelectWidget',\r\n    'ui:enumOptions': [{ value: '1', label: '加载中...' }],\r\n  }\r\n}\r\na\r\n\r\n2233"}